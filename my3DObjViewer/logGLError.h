#pragma once


#include <GL/gl3w.h>

#include <iostream>
#include <vector>

#ifdef _DEBUG

#define logGlError() logGlErrorImpl(__LINE__);

#else

#define logGlError()

#endif

static void logGlErrorImpl(int line) {

	static struct Error {
		int errorCode;
		char* errorDesc;
	}errorDics[] = {
		GL_DEPTH_BUFFER_BIT, "GL_DEPTH_BUFFER_BIT",
		GL_STENCIL_BUFFER_BIT, "GL_STENCIL_BUFFER_BIT",
		GL_COLOR_BUFFER_BIT, "GL_COLOR_BUFFER_BIT",
		GL_FALSE, "GL_FALSE",
		GL_TRUE, "GL_TRUE",
		GL_POINTS, "GL_POINTS",
		GL_LINES, "GL_LINES",
		GL_LINE_LOOP, "GL_LINE_LOOP",
		GL_LINE_STRIP, "GL_LINE_STRIP",
		GL_TRIANGLES, "GL_TRIANGLES",
		GL_TRIANGLE_STRIP, "GL_TRIANGLE_STRIP",
		GL_TRIANGLE_FAN, "GL_TRIANGLE_FAN",
		GL_QUADS, "GL_QUADS",
		GL_NEVER, "GL_NEVER",
		GL_LESS, "GL_LESS",
		GL_EQUAL, "GL_EQUAL",
		GL_LEQUAL, "GL_LEQUAL",
		GL_GREATER, "GL_GREATER",
		GL_NOTEQUAL, "GL_NOTEQUAL",
		GL_GEQUAL, "GL_GEQUAL",
		GL_ALWAYS, "GL_ALWAYS",
		GL_ZERO, "GL_ZERO",
		GL_ONE, "GL_ONE",
		GL_SRC_COLOR, "GL_SRC_COLOR",
		GL_ONE_MINUS_SRC_COLOR, "GL_ONE_MINUS_SRC_COLOR",
		GL_SRC_ALPHA, "GL_SRC_ALPHA",
		GL_ONE_MINUS_SRC_ALPHA, "GL_ONE_MINUS_SRC_ALPHA",
		GL_DST_ALPHA, "GL_DST_ALPHA",
		GL_ONE_MINUS_DST_ALPHA, "GL_ONE_MINUS_DST_ALPHA",
		GL_DST_COLOR, "GL_DST_COLOR",
		GL_ONE_MINUS_DST_COLOR, "GL_ONE_MINUS_DST_COLOR",
		GL_SRC_ALPHA_SATURATE, "GL_SRC_ALPHA_SATURATE",
		GL_NONE, "GL_NONE",
		GL_FRONT_LEFT, "GL_FRONT_LEFT",
		GL_FRONT_RIGHT, "GL_FRONT_RIGHT",
		GL_BACK_LEFT, "GL_BACK_LEFT",
		GL_BACK_RIGHT, "GL_BACK_RIGHT",
		GL_FRONT, "GL_FRONT",
		GL_BACK, "GL_BACK",
		GL_LEFT, "GL_LEFT",
		GL_RIGHT, "GL_RIGHT",
		GL_FRONT_AND_BACK, "GL_FRONT_AND_BACK",
		GL_NO_ERROR, "GL_NO_ERROR",
		GL_INVALID_ENUM, "GL_INVALID_ENUM",
		GL_INVALID_VALUE, "GL_INVALID_VALUE",
		GL_INVALID_OPERATION, "GL_INVALID_OPERATION",
		GL_OUT_OF_MEMORY, "GL_OUT_OF_MEMORY",
		GL_CW, "GL_CW",
		GL_CCW, "GL_CCW",
		GL_POINT_SIZE, "GL_POINT_SIZE",
		GL_POINT_SIZE_RANGE, "GL_POINT_SIZE_RANGE",
		GL_POINT_SIZE_GRANULARITY, "GL_POINT_SIZE_GRANULARITY",
		GL_LINE_SMOOTH, "GL_LINE_SMOOTH",
		GL_LINE_WIDTH, "GL_LINE_WIDTH",
		GL_LINE_WIDTH_RANGE, "GL_LINE_WIDTH_RANGE",
		GL_LINE_WIDTH_GRANULARITY, "GL_LINE_WIDTH_GRANULARITY",
		GL_POLYGON_MODE, "GL_POLYGON_MODE",
		GL_POLYGON_SMOOTH, "GL_POLYGON_SMOOTH",
		GL_CULL_FACE, "GL_CULL_FACE",
		GL_CULL_FACE_MODE, "GL_CULL_FACE_MODE",
		GL_FRONT_FACE, "GL_FRONT_FACE",
		GL_DEPTH_RANGE, "GL_DEPTH_RANGE",
		GL_DEPTH_TEST, "GL_DEPTH_TEST",
		GL_DEPTH_WRITEMASK, "GL_DEPTH_WRITEMASK",
		GL_DEPTH_CLEAR_VALUE, "GL_DEPTH_CLEAR_VALUE",
		GL_DEPTH_FUNC, "GL_DEPTH_FUNC",
		GL_STENCIL_TEST, "GL_STENCIL_TEST",
		GL_STENCIL_CLEAR_VALUE, "GL_STENCIL_CLEAR_VALUE",
		GL_STENCIL_FUNC, "GL_STENCIL_FUNC",
		GL_STENCIL_VALUE_MASK, "GL_STENCIL_VALUE_MASK",
		GL_STENCIL_FAIL, "GL_STENCIL_FAIL",
		GL_STENCIL_PASS_DEPTH_FAIL, "GL_STENCIL_PASS_DEPTH_FAIL",
		GL_STENCIL_PASS_DEPTH_PASS, "GL_STENCIL_PASS_DEPTH_PASS",
		GL_STENCIL_REF, "GL_STENCIL_REF",
		GL_STENCIL_WRITEMASK, "GL_STENCIL_WRITEMASK",
		GL_VIEWPORT, "GL_VIEWPORT",
		GL_DITHER, "GL_DITHER",
		GL_BLEND_DST, "GL_BLEND_DST",
		GL_BLEND_SRC, "GL_BLEND_SRC",
		GL_BLEND, "GL_BLEND",
		GL_LOGIC_OP_MODE, "GL_LOGIC_OP_MODE",
		GL_DRAW_BUFFER, "GL_DRAW_BUFFER",
		GL_READ_BUFFER, "GL_READ_BUFFER",
		GL_SCISSOR_BOX, "GL_SCISSOR_BOX",
		GL_SCISSOR_TEST, "GL_SCISSOR_TEST",
		GL_COLOR_CLEAR_VALUE, "GL_COLOR_CLEAR_VALUE",
		GL_COLOR_WRITEMASK, "GL_COLOR_WRITEMASK",
		GL_DOUBLEBUFFER, "GL_DOUBLEBUFFER",
		GL_STEREO, "GL_STEREO",
		GL_LINE_SMOOTH_HINT, "GL_LINE_SMOOTH_HINT",
		GL_POLYGON_SMOOTH_HINT, "GL_POLYGON_SMOOTH_HINT",
		GL_UNPACK_SWAP_BYTES, "GL_UNPACK_SWAP_BYTES",
		GL_UNPACK_LSB_FIRST, "GL_UNPACK_LSB_FIRST",
		GL_UNPACK_ROW_LENGTH, "GL_UNPACK_ROW_LENGTH",
		GL_UNPACK_SKIP_ROWS, "GL_UNPACK_SKIP_ROWS",
		GL_UNPACK_SKIP_PIXELS, "GL_UNPACK_SKIP_PIXELS",
		GL_UNPACK_ALIGNMENT, "GL_UNPACK_ALIGNMENT",
		GL_PACK_SWAP_BYTES, "GL_PACK_SWAP_BYTES",
		GL_PACK_LSB_FIRST, "GL_PACK_LSB_FIRST",
		GL_PACK_ROW_LENGTH, "GL_PACK_ROW_LENGTH",
		GL_PACK_SKIP_ROWS, "GL_PACK_SKIP_ROWS",
		GL_PACK_SKIP_PIXELS, "GL_PACK_SKIP_PIXELS",
		GL_PACK_ALIGNMENT, "GL_PACK_ALIGNMENT",
		GL_MAX_TEXTURE_SIZE, "GL_MAX_TEXTURE_SIZE",
		GL_MAX_VIEWPORT_DIMS, "GL_MAX_VIEWPORT_DIMS",
		GL_SUBPIXEL_BITS, "GL_SUBPIXEL_BITS",
		GL_TEXTURE_1D, "GL_TEXTURE_1D",
		GL_TEXTURE_2D, "GL_TEXTURE_2D",
		GL_TEXTURE_WIDTH, "GL_TEXTURE_WIDTH",
		GL_TEXTURE_HEIGHT, "GL_TEXTURE_HEIGHT",
		GL_TEXTURE_BORDER_COLOR, "GL_TEXTURE_BORDER_COLOR",
		GL_DONT_CARE, "GL_DONT_CARE",
		GL_FASTEST, "GL_FASTEST",
		GL_NICEST, "GL_NICEST",
		GL_BYTE, "GL_BYTE",
		GL_UNSIGNED_BYTE, "GL_UNSIGNED_BYTE",
		GL_SHORT, "GL_SHORT",
		GL_UNSIGNED_SHORT, "GL_UNSIGNED_SHORT",
		GL_INT, "GL_INT",
		GL_UNSIGNED_INT, "GL_UNSIGNED_INT",
		GL_FLOAT, "GL_FLOAT",
		GL_STACK_OVERFLOW, "GL_STACK_OVERFLOW",
		GL_STACK_UNDERFLOW, "GL_STACK_UNDERFLOW",
		GL_CLEAR, "GL_CLEAR",
		GL_AND, "GL_AND",
		GL_AND_REVERSE, "GL_AND_REVERSE",
		GL_COPY, "GL_COPY",
		GL_AND_INVERTED, "GL_AND_INVERTED",
		GL_NOOP, "GL_NOOP",
		GL_XOR, "GL_XOR",
		GL_OR, "GL_OR",
		GL_NOR, "GL_NOR",
		GL_EQUIV, "GL_EQUIV",
		GL_INVERT, "GL_INVERT",
		GL_OR_REVERSE, "GL_OR_REVERSE",
		GL_COPY_INVERTED, "GL_COPY_INVERTED",
		GL_OR_INVERTED, "GL_OR_INVERTED",
		GL_NAND, "GL_NAND",
		GL_SET, "GL_SET",
		GL_TEXTURE, "GL_TEXTURE",
		GL_COLOR, "GL_COLOR",
		GL_DEPTH, "GL_DEPTH",
		GL_STENCIL, "GL_STENCIL",
		GL_STENCIL_INDEX, "GL_STENCIL_INDEX",
		GL_DEPTH_COMPONENT, "GL_DEPTH_COMPONENT",
		GL_RED, "GL_RED",
		GL_GREEN, "GL_GREEN",
		GL_BLUE, "GL_BLUE",
		GL_ALPHA, "GL_ALPHA",
		GL_RGB, "GL_RGB",
		GL_RGBA, "GL_RGBA",
		GL_POINT, "GL_POINT",
		GL_LINE, "GL_LINE",
		GL_FILL, "GL_FILL",
		GL_KEEP, "GL_KEEP",
		GL_REPLACE, "GL_REPLACE",
		GL_INCR, "GL_INCR",
		GL_DECR, "GL_DECR",
		GL_VENDOR, "GL_VENDOR",
		GL_RENDERER, "GL_RENDERER",
		GL_VERSION, "GL_VERSION",
		GL_EXTENSIONS, "GL_EXTENSIONS",
		GL_NEAREST, "GL_NEAREST",
		GL_LINEAR, "GL_LINEAR",
		GL_NEAREST_MIPMAP_NEAREST, "GL_NEAREST_MIPMAP_NEAREST",
		GL_LINEAR_MIPMAP_NEAREST, "GL_LINEAR_MIPMAP_NEAREST",
		GL_NEAREST_MIPMAP_LINEAR, "GL_NEAREST_MIPMAP_LINEAR",
		GL_LINEAR_MIPMAP_LINEAR, "GL_LINEAR_MIPMAP_LINEAR",
		GL_TEXTURE_MAG_FILTER, "GL_TEXTURE_MAG_FILTER",
		GL_TEXTURE_MIN_FILTER, "GL_TEXTURE_MIN_FILTER",
		GL_TEXTURE_WRAP_S, "GL_TEXTURE_WRAP_S",
		GL_TEXTURE_WRAP_T, "GL_TEXTURE_WRAP_T",
		GL_REPEAT, "GL_REPEAT"
	};

	GLenum error = glGetError();
	char* errorCodeName = "unknown";

	if (GL_NO_ERROR != error) {
		for (int i = 0; i < sizeof(errorDics) / sizeof(struct Error); i++) {
			if (errorDics[i].errorCode == error) {
				errorCodeName = errorDics[i].errorDesc;
				break;
			}
		}

#ifdef _MFC_VER
		TRACE("%d: glGetError() = %x %s\n", line, error, errorCodeName);
#else
		printf("%d: glGetError() = %x %s\n", line, error, errorCodeName);
#endif

	}

}
